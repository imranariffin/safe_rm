#!/bin/bash

# ----------------------- #
# 		FUNCTION DEFS				#
# ----------------------- #

function remove() {
	if [ ! -e $1 ]
	then
		echo "safe_rm: cannot remove '$1': No such file or directory"
		exit 1
	fi
	if [ ! -f $1 ]
	then
		echo "safe_rm: cannot remove '$1/': Is a directory"
		exit 1
	fi

	selfpath="$HOME/safe_rm/safe_rm"
	file=$1
	fullpath=$(echo "$(cd "$(dirname "$file")"; pwd)/$(basename $file)")

	if [ $fullpath = $selfpath ]
	then
		echo "safe_rm: cannot remove itself"
		exit 1
	fi

	#get full path of file
	#get inode of file
	#rename
	file=$1
	filename="$(basename $file)"
	fullpath=$(echo "$(cd "$(dirname "$file")"; pwd)/$filename")
	inode="$(stat -c %i $fullpath)"
	newname=${filename}_${inode}

	#move
	#write entry
	mv $fullpath $RECYCLEBIN/$newname
	echo "${newname}:$fullpath" >> $RESTOREFILE
}

function rm_recurse() {
	if [ -f $1 ]
	then
		remove $1
		return
	fi

	local d=$1
	local files=$(ls $d)
	for f in $files
	do
		rm_recurse $d/$f
	done
	rmdir $d
}

# ----------------------- #
# 		MAIN OPERATIONS			#
# ----------------------- #

RECYCLEBIN="$HOME/.deleted"
RESTOREFILE="$HOME/.restore.info"

#create recyclebin and restorefile if not exist
if [ ! -e $RECYCLEBIN ]
then
	mkdir $RECYCLEBIN
fi
if [ ! -e $RESTOREFILE ]
then
	touch $RESTOREFILE
fi

recursive=false

#manage options
while getopts ":ivr" opt
do
	case $opt in
		i) 	echo "safe_rm: option -i not implemented yet"; exit 1 ;;
		v) 	echo "safe_rm: option -v not implemented yet"; exit 1 ;;
		r) 	recursive=true ;;
		*) 	echo "safe_rm: invalid option -- $opt"; 
				echo "Try 'safe_rm --help' for more information.";
				exit 1 ;;
	esac
done

shift $((OPTIND-1))

#error checking
if [ $# -lt 1 ] 
then
	echo -e "safe_rm: missing operand\nTry 'safe_rm --help' for more information."
	exit 1
fi

if [ $recursive = true ]
then
	for f in $@
	do	
		rm_recurse $f
	done
	exit 0
else
	files=$@

	for f in $files
	do
		remove $f
	done
fi

exit 0
